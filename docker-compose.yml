services:
  mongodb:
    image: mongodb/mongodb-community-server:8.0.0-ubi8
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      CONN_STR: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017
    volumes:
      - 'mongodb:/data/db'
    healthcheck:
      test: >
        bash -c "echo 'db.runCommand({ ping: 1 })' | mongosh localhost:27017/test --quiet"
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - internal

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_HOST: ${NEXT_PUBLIC_HOST}
        NEXT_PUBLIC_STRIPE_PUBLISH_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISH_KEY}
        NEXT_PUBLIC_PRICE_3_MONTH: ${NEXT_PUBLIC_PRICE_3_MONTH}
        NEXT_PUBLIC_PRICE_6_MONTH: ${NEXT_PUBLIC_PRICE_6_MONTH}
        NEXT_PUBLIC_PRICE_12_MONTH: ${NEXT_PUBLIC_PRICE_12_MONTH}
        NEXT_PUBLIC_PRICE_ONE_TIME: ${NEXT_PUBLIC_PRICE_ONE_TIME}
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - internal
      - public

volumes:
  mongodb:
    driver: local

networks:
  public: { }
  internal: { }